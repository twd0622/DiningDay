<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Main">
	
	<select id="getMainStoreInfo" parameterType="map" resultType="map">
		select
			    ST.STORE_NO
		 	  , ST.STORE_NAME
			  , ST.STORE_CATEGORY
			  , ST.STORE_DETAIL
			  , SUBSTRING_INDEX(STORE_LOCATION, ' ', 3) STORE_LOCATION
			  , R.STORE_SCORE
  			  , R.STORE_REVIEW_COUNT
			  , cast((select count(LIKE_NO) LIKE_COUNT from LIKE_LIST where STORE_NO = ST.STORE_NO) as char(30)) LIKE_COUNT
			  , SI.PHOTO_NAME
			  , ifnull(cast((SELECT COUNT(RES_NO) FROM RESERVATION WHERE STORE_NO = ST.STORE_NO GROUP BY STORE_NO) as char(30)), 0) RESERVATION_COUNT
		   from STORE ST
		   LEFT JOIN (select STORE_NO
						   , group_concat(case PHOTO_TYPE when 'SU1' then PHOTO_NAME end) PHOTO_NAME
					    from STORE_IMAGE
					   where PHOTO_TYPE='SU1'
					   group by STORE_NO) SI 
			 ON ST.STORE_NO = SI.STORE_NO
		   LEFT JOIN (select S.STORE_NO
						   , ifnull(cast(COUNT(R.RES_NO) as char(10)), '0') STORE_REVIEW_COUNT
				           , ifnull(cast(format(AVG(R.REV_SCORE), 1) as char(10)), '0.0') STORE_SCORE
						from STORE S
						left join REVIEW R
						  ON S.STORE_NO = R.STORE_NO
					   WHERE S.STORE_NO = S.STORE_NO
					   GROUP BY S.STORE_NO) R
		     ON ST.STORE_NO = R.STORE_NO			 
	      where 1 = 1
		  <if test="searchInput != '' and searchInput != null">
		    and (STORE_NAME like concat('%',#{searchInput},'%')
		     or STORE_CATEGORY like concat('%',#{searchInput},'%')
			 or STORE_DETAIL like concat('%',#{searchInput},'%'))
		  </if> 
	      <if test="LOC_NAME != '' and LOC_NAME != null">
            and STORE_LOCATION LIKE concat('%', #{LOC_NAME} ,'%')
	      </if>
		  ORDER BY (RESERVATION_COUNT*5)+(STORE_REVIEW_COUNT*4)+(LIKE_COUNT*3) DESC, STORE_SCORE DESC 
		  <if test="searchInput == '' or searchInput == null">
		  limit 10
		  </if> 
		  ;
	</select>
		
	<select id="getReviewHighStore" parameterType="map" resultType="map">
		select
			    ST.STORE_NO
		 	  , ST.STORE_NAME
			  , ST.STORE_CATEGORY
			  , ST.STORE_DETAIL
			  , SUBSTRING_INDEX(STORE_LOCATION, ' ', 3) STORE_LOCATION
			  , R.STORE_SCORE
  			  , R.STORE_REVIEW_COUNT
			  , cast((select count(LIKE_NO) LIKE_COUNT from LIKE_LIST where STORE_NO = ST.STORE_NO) as char(30)) LIKE_COUNT
			  , SI.PHOTO_NAME
		   from STORE ST
		   LEFT JOIN (select STORE_NO
						   , group_concat(case PHOTO_TYPE when 'SU1' then PHOTO_NAME end) PHOTO_NAME
					    from STORE_IMAGE
					   where PHOTO_TYPE='SU1'
					   group by STORE_NO) SI 
			 ON ST.STORE_NO = SI.STORE_NO
		   LEFT JOIN (select S.STORE_NO
						   , ifnull(cast(COUNT(R.RES_NO) as char(10)), '0') STORE_REVIEW_COUNT
				           , ifnull(cast(format(AVG(R.REV_SCORE), 1) as char(10)), '0.0') STORE_SCORE
						from STORE S
						left join REVIEW R
						  ON S.STORE_NO = R.STORE_NO
					   WHERE S.STORE_NO = S.STORE_NO
					   GROUP BY S.STORE_NO) R
		     ON ST.STORE_NO = R.STORE_NO			 
	      where 1 = 1
	      <if test="LOC_NAME != '' and LOC_NAME != null">
            and STORE_LOCATION LIKE concat('%', #{LOC_NAME} ,'%')
	      </if>
		  ORDER BY STORE_SCORE DESC, LIKE_COUNT DESC limit 10;
	</select>
	
	<select id="getLikeHighStore" parameterType="map" resultType="map">
		select
			    ST.STORE_NO
		 	  , ST.STORE_NAME
			  , ST.STORE_CATEGORY
			  , ST.STORE_DETAIL
			  , SUBSTRING_INDEX(STORE_LOCATION, ' ', 3) STORE_LOCATION
			  , R.STORE_SCORE
  			  , R.STORE_REVIEW_COUNT
			  , cast((select count(LIKE_NO) LIKE_COUNT from LIKE_LIST where STORE_NO = ST.STORE_NO) as char(30)) LIKE_COUNT
			  , SI.PHOTO_NAME
		   from STORE ST
		   LEFT JOIN (select STORE_NO
						   , group_concat(case PHOTO_TYPE when 'SU1' then PHOTO_NAME end) PHOTO_NAME
					    from STORE_IMAGE
					   where PHOTO_TYPE='SU1'
					   group by STORE_NO) SI 
			 ON ST.STORE_NO = SI.STORE_NO
		   LEFT JOIN (select S.STORE_NO
						   , ifnull(cast(COUNT(R.RES_NO) as char(10)), '0') STORE_REVIEW_COUNT
				           , ifnull(cast(format(AVG(R.REV_SCORE), 1) as char(10)), '0.0') STORE_SCORE
						from STORE S
						left join REVIEW R
						  ON S.STORE_NO = R.STORE_NO
					   WHERE S.STORE_NO = S.STORE_NO
					   GROUP BY S.STORE_NO) R
		     ON ST.STORE_NO = R.STORE_NO			 
	      where 1 = 1
	      <if test="LOC_NAME != '' and LOC_NAME != null">
            and STORE_LOCATION LIKE concat('%', #{LOC_NAME} ,'%')
	      </if>
		  ORDER BY LIKE_COUNT DESC, STORE_SCORE DESC limit 10;
	</select>
	
	<select id="getMainReviewInfo" parameterType="String" resultType="map">
		SELECT concat(ROW_NUMBER() over (order by RL.LIKE_COUNT DESC ), 'ìœ„')  'RANK'
		     , R.REV_NO
			 , R.CUS_NO
		     , R.CUS_NICK
		     , R.REV_CONTENT
		     , R.STORE_NO
		     , C.CUS_IMAGE
		  FROM REVIEW R
		  JOIN (select R.REV_NO
					 , count(RL_NO) LIKE_COUNT
				  from REVIEW R
				  left join REVIEW_LIKE RL
					on R.REV_NO = RL.REV_NO
				 group by R.REV_NO) RL
			ON R.REV_NO = RL.REV_NO
		  JOIN CUSTOMER C
		    ON R.CUS_NO = C.CUS_NO
		  JOIN STORE S
		    ON R.STORE_NO = S.STORE_NO
		 WHERE 1=1
	       <if test="LOC_NAME != '' and LOC_NAME != null">
	           and S.STORE_LOCATION LIKE concat('%', #{LOC_NAME} ,'%')
	       </if>
		 order by RL.LIKE_COUNT DESC limit 3;
	</select>
	
	<select id="searchCount" parameterType="map" resultType="int">
		select count(*)
		  from STORE
		 where (STORE_NAME like CONCAT('%',#{searchInput},'%')
 		 	or STORE_CATEGORY like concat('%',#{searchInput},'%')
	        or STORE_DETAIL like concat('%',#{searchInput},'%'))
        <if test="LOC_NAME != '' and LOC_NAME != null">
           and STORE_LOCATION LIKE concat('%', #{LOC_NAME} ,'%');
       </if>
	</select>
	
	<select id="getStore" parameterType="map" resultType="map">
	   select
			  ST.STORE_NO
			, ST.OWN_NO
			, ST.STORE_NAME
			, ST.STORE_TEL
			, replace(ST.STORE_LOCATION, ' ', '+') STORE_LOCATION 
			, ST.STORE_CATEGORY
			, ST.STORE_DETAIL
			, ST.STORE_INFO
			, ST.STORE_PLUS
			, DATE_FORMAT(STR_TO_DATE(ST.STORE_ST, '%H%i'), '%H:%i') STORE_ST
			, DATE_FORMAT(STR_TO_DATE(ST.STORE_ET, '%H%i'), '%H:%i') STORE_ET
			, ST.STORE_RT*100 STORE_RT
			, DATE_FORMAT(STR_TO_DATE(ST.STORE_BTS, '%H%i'), '%H:%i') STORE_BTS
			, DATE_FORMAT(STR_TO_DATE(ST.STORE_BTE, '%H%i'), '%H:%i') STORE_BTE
			, if(ST.STORE_LO = '0', ST.STORE_LO,DATE_FORMAT(STR_TO_DATE(LPAD(ST.STORE_ET - (ST.STORE_LO*100), 4, '0'), '%H%i'), '%H:%i')) STORE_LO
			, ST.STORE_RST	
			, date_format(timediff(STR_TO_DATE(STORE_RET, '%H%i') , STR_TO_DATE(STORE_RST, "%H%i")), '%H%i') TIEMDIFF	
			, ST.STORE_CLOSE
			, R.STORE_SCORE
			, R.STORE_REVIEW_COUNT
			, (select count(LIKE_NO) LIKE_COUNT from LIKE_LIST where STORE_NO = ST.STORE_NO) LIKE_COUNT
			, SI.BA1
	 	  	, SI.BA2
	  	 from STORE ST
		 LEFT JOIN (SELECT STORE_NO
						, MAX(CASE WHEN PHOTO_TYPE = 'BA1' THEN PHOTO_NAME END) AS BA1
						, MAX(CASE WHEN PHOTO_TYPE = 'BA2' THEN PHOTO_NAME END) AS BA2
					FROM STORE_IMAGE
					GROUP BY STORE_NO ) SI
		   ON ST.STORE_NO = SI.STORE_NO
	     LEFT JOIN (select S.STORE_NO
					     , ifnull(cast(COUNT(R.RES_NO) as char(10)), '0') STORE_REVIEW_COUNT
					     , ifnull(cast(format(AVG(R.REV_SCORE), 1) as char(10)), '0.0') STORE_SCORE
					  from STORE S
				 	  left join REVIEW R
					    ON S.STORE_NO = R.STORE_NO
				     WHERE S.STORE_NO = S.STORE_NO
				     GROUP BY S.STORE_NO) R
		  ON ST.STORE_NO = R.STORE_NO     
	   where ST.STORE_NO = #{STORE_NO};
	</select>
	
	<select id="getMenuList" parameterType="map" resultType="map">
	   select
			  ME.MENU_NO
			, ME.STORE_NO
			, ME.MENU_NAME
			, FORMAT(ME.MENU_PRICE, 0) MENU_PRICE
			, ME.MENU_HIDE
			, ME.MENU_INFO
			, SI.PHOTO_NAME
		 from MENU ME
		 LEFT JOIN (select STORE_NO
						 , PHOTO_TYPE
						 , PHOTO_NAME
					  from STORE_IMAGE
					 where PHOTO_TYPE LIKE 'ME%') SI
	 	   ON (ME.STORE_NO, ME.MENU_NO) = (SI.STORE_NO, SI.PHOTO_TYPE)
	    where ME.STORE_NO = #{STORE_NO};
	</select>
	
	<select id="getTableList" parameterType="map" resultType="map">
		select
				  SE.SEAT_NO
				, SE.STORE_NO
				, SE.SEAT_NAME
				, SE.SEAT_MIN
				, SE.SEAT_MAX
				, SE.SEAT_CONTENT
				, SE.SEAT_OC
				, SI.PHOTO_NAME
		  from SEAT SE
		  LEFT JOIN (select
							STORE_NO,
							PHOTO_TYPE,
							PHOTO_NAME
					from STORE_IMAGE
					where PHOTO_TYPE LIKE 'SE%') SI
		    ON (SE.STORE_NO, SE.SEAT_NO) = (SI.STORE_NO, SI.PHOTO_TYPE) 
		 where SE.STORE_NO = #{STORE_NO}
		 ORDER BY SEAT_NO;
	</select>
	
	<select id="getTable" parameterType="map" resultType="map">
		select
			   SEAT_NO
			 , STORE_NO
			 , SEAT_NAME
			 , SEAT_MIN
			 , SEAT_MAX
			 , SEAT_CONTENT
			 , SEAT_OC
		  from SEAT
		 where STORE_NO = #{STORE_NO}
		   and SEAT_NO = #{TABLE_NO};
	</select>
	
	<select id="getLike" parameterType="map" resultType="map">
		select *
		  from LIKE_LIST
		 WHERE CUS_NO = #{CUS_NO}
		   AND STORE_NO = #{STORE_NO};
	</select>
	
	<insert id="insertLike" parameterType="map">
		insert into LIKE_LIST
		values( concat("LL" ,ifnull((select max(cast(replace(LIKE_NO, "LL", "")) as unsigned)+1 from LIKE_LIST a), 1))
		      , #{CUS_NO}
		      , #{STORE_NO});
	</insert>
	
	<delete id="deleteLike">
		delete from LIKE_LIST
		 where STORE_NO = #{STORE_NO}
		   and CUS_NO = #{CUS_NO};
	</delete>
	
	<select id="getResTime" parameterType="map" resultType="map">
		SELECT RES_NO, RES_TIME
		  FROM RESERVATION
		 WHERE STORE_NO = #{STORE_NO}
		   AND SEAT_NO = #{SEAT_NO}
		   AND RES_DATE = date_format(#{DATE}, '%Y%m%d')
		   AND REQ_STATE = '0';
	</select>
</mapper>






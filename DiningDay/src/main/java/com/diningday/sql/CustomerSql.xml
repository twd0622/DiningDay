<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Customer">
	
	<insert id="insert" parameterType="map">
		insert into CUSTOMER
			( CUS_NO    ,
			  CUS_ID    ,
			  CUS_NAME  ,
			  CUS_BIRTH ,
			  CUS_TEL   ,
			  CUS_EMAIL ,
			  CUS_GENDER,
			  CUS_NICK  ,
			  CUS_DATE)  
		values
			(CONCAT('CU', ( select *             
				from (select ifnull(max(cast(trim(leading 'CU' from CUS_NO) as unsigned)), 0) + 1
					  from CUSTOMER ) A ))
			, #{CUS_ID}
			, #{CUS_NAME}
			, #{CUS_BIRTH}
			, replace(#{CUS_TEL}, "-", "")
			, #{CUS_EMAIL}
			, #{CUS_GENDER}
			, CONCAT('CU', ( select *             
				from (select ifnull(max(cast(trim(leading 'CU' from CUS_NO) as unsigned)), 0) + 1
					  from CUSTOMER ) A ))
			, DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s'));
	</insert>
	
	
	<select id="searchId" parameterType="map" resultType="map">
		select CUS_NO, 
			   CUS_ID, 
			   CUS_EMAIL, 
			   CUS_NICK
		from CUSTOMER
		where CUS_ID = #{CUS_ID};
	</select>
	
	<select id="getCustomer" parameterType="String" resultType="map">
		select CUS_NO    ,
			  CUS_ID    ,
			  CUS_NAME  ,
			  CAST(CUS_BIRTH AS date) CUS_BIRTH,
			  CUS_TEL   ,
			  CUS_EMAIL ,
			  CUS_GENDER,
			  CUS_NICK
		from CUSTOMER
		where CUS_NO = #{CUS_NO};
	</select>
	
	<update id="customerEdit" parameterType="String">
		update 	CUSTOMER
		set		CUS_NAME	= #{CUS_NAME}
				, CUS_NICK 	= #{CUS_NICK}
				, CUS_TEL 	= #{CUS_TEL}
				, CUS_EMAIL = #{CUS_EMAIL}
				, CUS_BIRTH = replace(cast(#{CUS_BIRTH} as char), "-", "")
				, CUS_GENDER= #{CUS_GENDER}
				, CUS_REDATE= DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s')
		where	CUS_NO = #{CUS_NO};
	</update>
	
	
	<select id="customerCheck" parameterType="map" resultType="map">
		select CUS_NO    ,
			   CUS_ID    ,
			   CUS_NAME  ,
			   CUS_BIRTH ,
			   CUS_TEL   ,
			   CUS_EMAIL ,
			   CUS_GENDER,
			   CUS_NICK  ,
			   CUS_DATE
		from CUSTOMER
		where CUS_EMAIL=#{CUS_EMAIL}
		and CUS_NO=#{CUS_NO};
	</select> 
	
	<delete id="deleteCustomer"  parameterType="map">
		delete
		from CUSTOMER 
		where CUS_NO=#{CUS_NO};
	</delete>
	
	<!-- 01/08_준우 + 찜 목록 이동 기능 -->
	<select id="getLikeList" parameterType="String" resultType="map">
		SELECT S.STORE_NO
		     , S.STORE_NAME
		     , S.STORE_CATEGORY
   			 , S.STORE_DETAIL
		     , S.STORE_SCORE
		     , (SELECT COUNT(*) FROM LIKE_LIST A WHERE STORE_NO = S.STORE_NO) LIKE_COUNT
		  FROM LIKE_LIST L
		  JOIN STORE S
		    ON L.STORE_NO = S.STORE_NO
		where L.CUS_NO = #{CUS_NO};
	</select>
	
	<select id="getReservation" parameterType="String" resultType="map">
		SELECT R.RES_NO
  			 , CONCAT(DATE_FORMAT(CAST(R.RES_DATE AS date), '%Y년 %m월 %d일 '), DATE_FORMAT(CAST(R.RES_TIME AS time), '%H:%i')) "RES_DATE"
			 , R.RES_PEOPLE
			 , R.REQ_STATE
			 , ST.STORE_NAME
			 , SE.SEAT_NAME
		FROM RESERVATION R JOIN STORE ST
			 ON R.STORE_NO = ST.STORE_NO
		 	 JOIN SEAT SE
			 ON (R.SEAT_NO, R.STORE_NO) = (SE.SEAT_NO, SE.STORE_NO)
		WHERE R.CUS_NO = #{CUS_NO};
	</select>
	
	<select id="reservationModal" parameterType="String" resultType="map">
		SELECT 
		       CONCAT('예약번호 : ', R.RES_NO) "RES_NO"
		     , CONCAT(DATE_FORMAT(CAST(R.RES_DATE AS date), '%Y년 %m월 %d일 '), DATE_FORMAT(CAST(R.RES_TIME AS time), '%H:%i')) "RES_DATE"
			 , R.CUS_NAME
			 , CONCAT(LEFT(R.CUS_TEL, 3),'-',SUBSTR(R.CUS_TEL,4,4),'-',RIGHT(R.CUS_TEL, 4)) "CUS_TEL"
			 , R.RES_REQ
			 , DATE_FORMAT(CAST(R.RES_PAYTIME AS time), '%Y년 %m월 %d일 %H:%i:%s') "RES_PAYTIME"
			 , R.STORE_NO
			 , CONCAT(R.RES_PEOPLE, '명') "RES_PEOPLE"
			 , ST.STORE_NAME
		     , ST.STORE_LOCATION
			 , SE.SEAT_NAME
		--	 , RM.MENU_NAME
		--	 , RM.MENU_COUNT
		--	 , RM.PAID_PRICE
			 , CONCAT(format(P.PAID_AMOUNT, 0), '원') "PAID_AMOUNT"
			 , P.BUYER_NAME
			 , P.CARD_NAME
			 , P.CARD_NUMBER
		FROM RESERVATION R JOIN STORE ST
			 ON R.STORE_NO = ST.STORE_NO
		 	 JOIN SEAT SE
			 ON (R.SEAT_NO, R.STORE_NO) = (SE.SEAT_NO, SE.STORE_NO)
		--	 JOIN RESERVATION_MENU RM
		--	 ON R.RES_NO = RM.RES_NO
			 JOIN PAYMENT P
			 ON R.RES_NO = P.RES_NO
		WHERE R.RES_NO = #{RES_NO};
	</select>
	
	
	<select id="menuModal" parameterType="String" resultType="map">	
		SELECT 
			   RM.MENU_NAME
			  , RM.MENU_COUNT
			  , RM.PAID_PRICE
		FROM  RESERVATION R JOIN RESERVATION_MENU RM
		ON    R.RES_NO = RM.RES_NO
		WHERE R.RES_NO = #{RES_NO};
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Customer">
	
	<insert id="insert" parameterType="map">
		insert into CUSTOMER
			( CUS_NO    
			  , CUS_ID    
			  , CUS_NAME  
			  , CUS_BIRTH 
			  , CUS_TEL  
			  , CUS_EMAIL 
			  , CUS_GENDER
			  , CUS_NICK  
			  , CUS_DATE
			  , CUS_IMAGE)  
		values
			(CONCAT('CU', ( select *             
				from (select ifnull(max(cast(trim(leading 'CU' from CUS_NO) as unsigned)), 0) + 1
					  from CUSTOMER ) A ))
			, #{CUS_ID}
			, #{CUS_NAME}
			, #{CUS_BIRTH}
			, replace(#{CUS_TEL}, "-", "")
			, #{CUS_EMAIL}
			, #{CUS_GENDER}
			, CONCAT('CU', ( select *             
				from (select ifnull(max(cast(trim(leading 'CU' from CUS_NO) as unsigned)), 0) + 1
					  from CUSTOMER ) A ))
			, DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s')
			, 'profile.png');
	</insert>
	
	<select id="searchId" parameterType="map" resultType="map">
		select CUS_NO
		from CUSTOMER
		where CUS_ID = #{CUS_ID};
	</select>
		
	<select id="getReservation" parameterType="String" resultType="map">
		SELECT P.MERCHANT_UID
  			 , CONCAT(DATE_FORMAT(CAST(R.RES_DATE AS date), '%Y년 %m월 %d일 '), DATE_FORMAT(CAST(R.RES_TIME AS time), '%i:%s')) "RES_DATE"
			 , R.RES_PEOPLE
			 , R.REQ_STATE
			 , CASE WHEN R.REQ_STATE = '2' THEN '방문완료'
					WHEN R.REQ_STATE = '1' THEN '예약취소'
					WHEN R.REQ_STATE = '0' THEN '예약완료' END "STATE_NAME"
			 , ST.STORE_NAME
			 , SE.SEAT_NAME
			 , R.RES_NO
			 , CASE WHEN V.REV_NO IS NULL AND R.REQ_STATE = '2' THEN 'Y'
													  		  	ELSE 'N' END "REVIEW_ON"
		FROM RESERVATION R JOIN STORE ST
			 ON R.STORE_NO = ST.STORE_NO
		 	 JOIN SEAT SE
			 ON (R.SEAT_NO, R.STORE_NO) = (SE.SEAT_NO, SE.STORE_NO)
			 JOIN PAYMENT P
             ON R.RES_NO = P.RES_NO
             LEFT JOIN REVIEW V
			 ON R.RES_NO = V.RES_NO
		WHERE R.CUS_NO = #{CUS_NO}
		ORDER BY RES_DATE DESC;
	</select>
	
	<select id="reservationModal" parameterType="String" resultType="map">
		SELECT 
			   P.MERCHANT_UID
		     , CONCAT(DATE_FORMAT(CAST(R.RES_DATE AS date), '%Y년 %m월 %d일 '), DATE_FORMAT(CAST(R.RES_TIME AS time), '%i:%s')) "RES_DATE"
			 , R.CUS_NAME
			 , CONCAT(LEFT(R.CUS_TEL, 3),'-',SUBSTR(R.CUS_TEL,4,4),'-',RIGHT(R.CUS_TEL, 4)) "CUS_TEL"
			 , R.RES_REQ
			 , R.REQ_STATE
			 , DATE_FORMAT(CAST(R.RES_PAYTIME AS time), '%Y년 %m월 %d일 %H:%i:%s') "RES_PAYTIME"
			 , R.STORE_NO
			 , CONCAT(R.RES_PEOPLE, '명') "RES_PEOPLE"
			 , ST.STORE_NAME
		     , ST.STORE_LOCATION
			 , SE.SEAT_NAME
			 , CONCAT(format(P.PAID_AMOUNT, 0), '원') "PAID_AMOUNT"
			 , P.BUYER_NAME
			 , P.CARD_NAME
			 , P.CARD_NUMBER
		FROM RESERVATION R JOIN STORE ST
		  ON R.STORE_NO = ST.STORE_NO
		JOIN SEAT SE
		  ON (R.SEAT_NO, R.STORE_NO) = (SE.SEAT_NO, SE.STORE_NO)
	    JOIN PAYMENT P
		  ON R.RES_NO = P.RES_NO
		WHERE R.RES_NO = #{RES_NO};
	</select>
	
	<select id="menuModal" parameterType="String" resultType="map">	
		SELECT 
			   RM.MENU_NAME
			  , CONCAT(RM.MENU_COUNT, '개') "MENU_COUNT"
			  , CONCAT(format(RM.PAID_PRICE, 0), '원') "PAID_PRICE"
		FROM  RESERVATION R JOIN RESERVATION_MENU RM
		ON    R.RES_NO = RM.RES_NO
		WHERE R.RES_NO = #{RES_NO};
	</select>
	
	<select id="getCustomer" parameterType="String" resultType="map">
		select CUS_NO    
			  , CUS_ID    
			  , CUS_NAME  
			  , CAST(CUS_BIRTH AS date) CUS_BIRTH
			  , CUS_TEL   
			  , CUS_EMAIL 
			  , CUS_GENDER
			  , CUS_NICK
			  , CUS_IMAGE
		from CUSTOMER
		where CUS_NO = #{CUS_NO};
	</select>
	
	<update id="customerEdit" parameterType="String">
		update 	CUSTOMER
		set		CUS_NAME	= #{CUS_NAME}
				, CUS_NICK 	= #{CUS_NICK}
				, CUS_TEL 	= #{CUS_TEL}
				, CUS_EMAIL = #{CUS_EMAIL}
				, CUS_BIRTH = replace(cast(#{CUS_BIRTH} as char), "-", "")
				, CUS_REDATE= DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s')
				, CUS_IMAGE = IF(#{CUS_IMAGE} is not null, #{CUS_IMAGE}, CUS_IMAGE)
		where	CUS_NO = #{CUS_NO};
	</update>
	
	<update  id="resetImage" parameterType="String">
		update 	CUSTOMER
		set 	CUS_IMAGE = default
		where 	CUS_NO = #{CUS_NO};
	</update>
	
	<select id="customerCheck" parameterType="map" resultType="map">
		select CUS_NO    
			   , CUS_EMAIL
		from CUSTOMER
		where CUS_EMAIL=#{CUS_EMAIL}
		and CUS_NO=#{CUS_NO};
	</select> 
	
	<delete id="deleteCustomer"  parameterType="map">
		delete
		from CUSTOMER 
		where CUS_NO=#{CUS_NO};
	</delete>
	
	<insert id="insertEx" parameterType="map">
		insert into EX_CUSTOMER
			( CUS_NO    
			, CUS_ID    
			, CUS_NAME
			, CUS_BIRTH
			, CUS_TEL
			, CUS_EMAIL
			, CUS_GENDER
			, CUS_REASON
			, CUS_DATE
			, CUS_EXDATE)  
		values
			( #{CUS_NO}
			, #{CUS_ID}
			, #{CUS_NAME}
			, #{CUS_BIRTH}
			, #{CUS_TEL}
			, #{CUS_EMAIL}
			, #{CUS_GENDER}
			, #{CUS_REASON}
			, #{CUS_DATE}
			, DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s'));
	</insert>
	
	<!-- 01/08_준우 + 찜 목록 이동 기능 -->
	<select id="getLikeList" parameterType="String" resultType="map">
		SELECT S.STORE_NO
		     , S.STORE_NAME
		     , S.STORE_CATEGORY
		     , S.STORE_DETAIL
		     , S.STORE_SCORE
		     , (SELECT COUNT(*) FROM LIKE_LIST A WHERE STORE_NO = S.STORE_NO) LIKE_COUNT
		     , PHOTO_NAME 
		  FROM STORE S
		  LEFT JOIN LIKE_LIST L
		    ON L.STORE_NO = S.STORE_NO
		  LEFT JOIN STORE_IMAGE SI
		    ON S.STORE_NO = SI.STORE_NO
		where L.CUS_NO = #{CUS_NO}
		  AND PHOTO_TYPE = 'SU1';
	</select>
	
	<!-- 01/22_준우 + 자기가 쓴 리뷰 보기 -->
	<select id="cus_review" parameterType="String" resultType="map">
		select R.REV_NO
		     , R.CUS_NICK
		     , R.REV_SCORE
		     , R.REV_CONTENT
		     , str_to_date(R.REV_DATE, '%Y%m%d%H%i%s') REV_DATE
		     , ifnull(R.REV_IMAGE, '0') REV_IMAGE
		     , ifnull(RA.ANSWER_CONTENT, '0') ANSWER_CONTENT
			 , ifnull(concat('(수정) ', str_to_date(ifnull(RA.ANSWER_UPDATE_DATE, RA.ANSWER_DATE), '%Y%m%d%H%i%s')), '0') ANSWER_DATE
		     , RM.MENU_NAME
		     , S.SEAT_NAME
	      	 , R.STORE_NO
		from REVIEW R 
		left JOIN REVIEW_ANSWER RA 
		ON R.REV_NO = RA.REV_NO
		JOIN SEAT S 
		ON (R.SEAT_NO, R.STORE_NO) = (S.SEAT_NO, S.STORE_NO)
		JOIN (select RES_NO, group_concat(concat(MENU_NAME, '/', MENU_COUNT)) MENU_NAME
				from RESERVATION_MENU
				group by RES_NO) RM
		ON R.RES_NO = RM.RES_NO        
		where R.CUS_NO = #{CUS_NO};
	</select>
</mapper>